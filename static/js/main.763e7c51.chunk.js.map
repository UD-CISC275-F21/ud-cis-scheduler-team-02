{"version":3,"sources":["components/Scheduler.tsx","Table.tsx","components/Summary.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Scheduler","scheduler","setScheduler","console","log","useState","semesterName","setSemesterName","columns","setColumns","useEffect","className","Row","Col","md","Form","Group","Label","Control","type","value","onChange","e","target","placeholder","Button","onClick","copy","name","items","style","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","map","columnId","flexDirection","alignItems","border","background","margin","padding","width","cursor","removeSemester","xmlns","fill","viewBox","d","fillRule","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","item","draggableId","CourseName","draggableProps","dragHandleProps","userSelect","minHeight","backgroundColor","isDragging","color","fontSize","Credit","Description","Table","data","courses","setCourses","title","term","language","addFormData","setAddFormData","editCourseId","setEditCourseId","handleAddFormChange","event","preventDefault","fieldName","getAttribute","fieldValue","newFormData","onSubmit","editedCourse","id","editFormData","newContacts","findIndex","contact","newCourse","nanoid","required","Summary","list","setList","filter","setFilter","selected","setSelected","f","onSelected","includes","i","push","Container","checked","htmlFor","semester","course","reduce","a","b","App","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.763e7c51.chunk.js","sourcesContent":["/* eslint-disable no-extra-parens */\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { CourseList, Course } from \"../App\";\n\n\ninterface SchedulerProp {\n    scheduler: { [x: string]: CourseList; }\n    setScheduler: React.Dispatch<React.SetStateAction<{ [x: string]: CourseList; }>>\n}\n\n\n\nconst Scheduler = ({ scheduler, setScheduler }: SchedulerProp): JSX.Element => {\n\n    // const courseList: CourseList[] = ;\n    console.log(scheduler);\n    const [semesterName, setSemesterName] = useState<string>(\"\");\n    const [columns, setColumns] = useState<{ [x: string]: CourseList; }>(scheduler);\n\n    useEffect(() => {\n        // console.log(columns);\n        setScheduler(columns);\n    }, [columns]);\n\n\n    const onDragEnd = (result: DropResult, columns: { [x: string]: CourseList; }, setColumns: React.Dispatch<React.SetStateAction<{ [x: string]: CourseList; }>>) => {\n        if (!result.destination) return;\n        const { source, destination } = result;\n\n        if (source.droppableId !== destination.droppableId) {\n            const sourceColumn = columns[source.droppableId];\n            const destColumn = columns[destination.droppableId];\n            const sourceItems = [...sourceColumn.items];\n            const destItems = [...destColumn.items];\n            const [removed] = sourceItems.splice(source.index, 1);\n            destItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...sourceColumn,\n                    items: sourceItems\n                },\n                [destination.droppableId]: {\n                    ...destColumn,\n                    items: destItems\n                }\n            });\n        } else {\n            const column = columns[source.droppableId];\n            const copiedItems = [...column.items];\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...column,\n                    items: copiedItems\n                }\n            });\n        }\n    };\n\n\n    const addSemester = () => {\n        console.log(columns);\n        const copy = { ...columns };\n        if (semesterName === \"\" || copy[semesterName])\n            return;\n\n        copy[semesterName] = ({\n            name: semesterName,\n            items: []\n        });\n        setColumns(copy);\n        setSemesterName(\"\");\n        return;\n    };\n\n    const removeSemester = (name: string) => {\n        const copy = { ...columns };\n        copy[\"Courses\"].items = [...copy[\"Courses\"].items, ...copy[name].items];\n        delete copy[name];\n        setColumns(copy);\n    };\n\n\n    return <div className=\"p-3 \">\n        <Row>\n            <Col md=\"3\">\n                <Form.Group className=\"mb-3\" >\n                    <Form.Label>Add Semester</Form.Label>\n                    <Form.Control type=\"text\" className=\"mb-2\" value={semesterName} onChange={(e) => setSemesterName((e.target as HTMLInputElement).value)} placeholder=\"Enter Semester\" />\n                    <Button onClick={addSemester}>Add</Button>\n                </Form.Group>\n            </Col>\n        </Row>\n\n        <div style={{ display: \"flex\", justifyContent: \"left\", height: \"100%\" }}>\n\n            <DragDropContext\n                onDragEnd={result => onDragEnd(result, columns, setColumns)}\n            >\n                {Object.entries(columns).map(([columnId, column]) => {\n                    return (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                alignItems: \"center\",\n                                // color: \"white\",\n                                border: \"1px solid darkgrey\",\n                                background: \"lightgrey\",\n                                // padding: \"5px\",\n                                margin: \"0px 10px\",\n                            }}\n                            key={columnId}\n                        >\n                            <div style={{\n                                padding: \"5px\",\n                                width: \"100%\",\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                            }}> <div className=\"fs-6\">{column.name}</div>\n                                {column.name !== \"Courses\" && <div\n                                    style={{\n                                        padding: \"2px\",\n                                        cursor: \"pointer\",\n                                        // border: \"1px solid darkgrey\",\n                                        // background: \"darkgrey\"\n                                    }}\n                                    onClick={() => removeSemester(column.name)} ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                                        <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n                                    </svg></div>}\n                            </div>\n                            <div style={{ margin: 8 }}>\n                                <Droppable droppableId={columnId} key={columnId}>\n                                    {(provided, snapshot) => {\n                                        return (\n                                            <div\n                                                {...provided.droppableProps}\n                                                ref={provided.innerRef}\n                                                style={{\n                                                    background: snapshot.isDraggingOver\n                                                        ? \"lightblue\"\n                                                        : \"lightgrey\",\n                                                    // padding: 4,\n                                                    width: 150,\n                                                    // height: 500,\n                                                    // overflowY: \"scroll\"\n                                                }}\n                                            >\n                                                {column.items.map((item: Course, index: number) => {\n                                                    return (\n                                                        <Draggable\n                                                            key={item.CourseName}\n                                                            draggableId={item.CourseName}\n                                                            index={index}\n                                                        >\n                                                            {(provided, snapshot) => {\n                                                                return (\n                                                                    <div\n                                                                        ref={provided.innerRef}\n                                                                        {...provided.draggableProps}\n                                                                        {...provided.dragHandleProps}\n                                                                        style={{\n                                                                            userSelect: \"none\",\n                                                                            padding: 16,\n                                                                            margin: \"0 0 8px 0\",\n                                                                            minHeight: \"50px\",\n                                                                            backgroundColor: snapshot.isDragging\n                                                                                ? \"#263B4A\"\n                                                                                : \"#456C86\",\n                                                                            color: \"white\",\n                                                                            ...provided.draggableProps.style\n                                                                        }}\n                                                                    >\n                                                                        <h5 style={{\n                                                                            fontSize: \"12px\"\n                                                                        }}>{item.CourseName}</h5>\n                                                                        <div style={{\n                                                                            fontSize: \"12px\"\n                                                                        }}>Credit: {item.Credit}</div>\n                                                                        <div style={{\n                                                                            fontSize: \"11px\"\n                                                                        }}>{item.Description}</div>\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                        </Draggable>\n                                                    );\n                                                })}\n                                                {provided.placeholder}\n                                            </div>\n                                        );\n                                    }}\n                                </Droppable>\n                            </div>\n                        </div>\n                    );\n                })}\n            </DragDropContext>\n        </div>\n    </div>\n    ;\n};\n\nexport default Scheduler;\n","/* eslint-disable react/jsx-key */\nimport React, { useState, FC, ChangeEvent, FormEvent } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./coursePool.json\";\n\nexport interface Course {\n    id: string;\n    name: string;\n    title: string;\n    term: string;\n    language: string;\n}\n\nexport interface FormData {\n    name: string;\n    title: string;\n    term: string;\n    language: string;\n}\n\nconst Table: FC = () => {\n    const [courses, setCourses] = useState<Course[]>(data);\n    const [addFormData, setAddFormData] = useState<FormData>({\n        name: \"\",\n        title: \"\",\n        term: \"\",\n        language: \"\"\n    });\n\n\n    const [editCourseId, setEditCourseId] = useState(\"\");\n\n    const handleAddFormChange = (event: ChangeEvent<HTMLInputElement>) => {\n        event.preventDefault();\n\n        const fieldName = event.target.getAttribute(\"name\");\n        const fieldValue = event.target.value;\n\n        if (fieldName) {\n            const newFormData = { ...addFormData, [fieldName]: fieldValue };\n            setAddFormData(newFormData);\n        }\n    };\n\n\n    const handleAddFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        const newCourse = {\n            id: nanoid(),\n            name: addFormData.name,\n            title: addFormData.title,\n            term: addFormData.term,\n            language: addFormData.language\n        };\n\n        const newContacts = [...courses, newCourse];\n        setCourses(newContacts);\n    };\n\n    const handleEditFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        const editedCourse = {\n            id: editCourseId,\n            name: editFormData.name,\n            title: editFormData.title,\n            term: editFormData.term,\n            language: editFormData.language\n        };\n\n        const newContacts = [...courses];\n\n        const index = courses.findIndex((contact) => contact.id === editCourseId);\n        if (index) {\n            newContacts[index] = editedCourse;\n            setCourses(newContacts);\n            setEditCourseId(\"\");\n        }\n    };\n\n    /*const handleEditClick = (event: Event, contact: Course) => {\n        event.preventDefault();\n        setEditCourseId(contact.id);\n\n        const formValues = {\n            name: contact.name,\n            title: contact.title,\n            term: contact.term,\n            language: contact.language\n        };\n\n        setEditFormData(formValues);\n    };\n    */\n\n\n    return (\n        <div className=\"app-container\">\n            <form onSubmit={handleEditFormSubmit}>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Title</th>\n                            <th>Term</th>\n                            <th>Language</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </form>\n\n            <h1>Add a Course</h1>\n            <h3>--for developer use only</h3>\n            <form onSubmit={handleAddFormSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                    placeholder=\"enter course name\"\n                    onChange={handleAddFormChange}\n                />\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    required\n                    placeholder=\"enter a course id\"\n                    onChange={handleAddFormChange}\n                />\n                <input type=\"text\" name=\"term\" required placeholder=\"enter a term\" onChange={handleAddFormChange} />\n                <input\n                    type=\"language\"\n                    name=\"language\"\n                    required\n                    placeholder=\"enter type language\"\n                    onChange={handleAddFormChange}\n                />\n                <button type=\"submit\">Add</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Table;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { CourseList, Course } from \"../App\";\ninterface SummaryProp {\n    scheduler: { [x: string]: CourseList; };\n\n}\n\nconst Summary = ({ scheduler }: SummaryProp): JSX.Element => {\n    const [list, setList] = useState<CourseList[]>([]);\n    const [filter, setFilter] = useState<string[]>([]);\n    const [selected, setSelected] = useState<string[]>([]);\n\n    useEffect(() => {\n        setList(Object.entries(scheduler).map((item) => item[1]).filter((item) => item.name !== \"Courses\"));\n        const f = Object.entries(scheduler).map((item) => item[0]).filter((item) => item !== \"Courses\");\n        setFilter(f);\n        setSelected(f);\n    }, []);\n\n    const filteredList = () => {\n        return list.filter(item => selected.includes(item.name));\n\n    };\n\n    const onSelected = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        let copy = [...selected];\n        if (copy.includes(value)) {\n            copy = copy.filter(i => i !== value);\n        } else {\n            copy.push(value);\n        }\n        setSelected(copy);\n    };\n    return <>\n        <Container>\n            <Row>\n                {filter.map((item) => <Col md=\"3\" key={item} ><div className=\"form-check\">\n                    <input className=\"form-check-input\" id={item} value={item} checked={selected.includes(item)} onChange={onSelected} type=\"checkbox\" />\n                    <label className=\"form-check-label\" htmlFor={item} >\n                        {item}\n                    </label>\n                </div></Col>)}\n            </Row>\n\n            <Row>\n\n                {filteredList().map((semester: CourseList) => <Col md=\"6\" key={semester.name}>\n                    {/* <h5>{semester.name}</h5> */}\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th>\n                                    {semester.name}\n                                </th>\n                                <th>\n\n                                </th>\n                                <th>\n\n                                </th>\n\n                            </tr>\n                            <tr>\n                                <th>\n                                    CourseName\n                                </th>\n                                <th>\n                                    Credit\n                                </th>\n                                <th>\n                                    Description\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {semester.items.map((course: Course) => <tr key={course.CourseName}>\n                                <td>\n                                    {course.CourseName}\n                                </td>\n                                <td>\n                                    {course.Credit}\n                                </td>\n                                <td>\n                                    {course.Description}\n                                </td>\n                            </tr>)}\n\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <th>\n                                    Total\n                                </th>\n                                <th>\n                                    {semester.items.map((course: Course) => course.Credit).reduce((a: number, b: number) => a + b, 0)}\n                                </th>\n                                <th>\n                                </th>\n                            </tr>\n                        </tfoot>\n\n                    </table></Col>)}\n            </Row>\n        </Container>\n    </>;\n};\n\nexport default Summary;","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import { Dropdown } from \"react-bootstrap\";\nimport Scheduler from \"./components/Scheduler\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Table from \"./Table\";\nimport Summary from \"./components/Summary\";\n\nexport interface Course {\n    CourseName: string;\n    Credit: number;\n    Description: string;\n}\n\nexport interface CourseList {\n    name: string\n    items: Course[]\n}\nconst list = [\n    { CourseName: \"CISC106\", Credit: 3, Description: \"General Computer Science for Engineers\" },\n    { CourseName: \"CISC108\", Credit: 3, Description: \"Introduction to Computer Science I\" },\n    { CourseName: \"CISC181\", Credit: 3, Description: \"Introduction to Computer Science II\" },\n    { CourseName: \"CISC210\", Credit: 3, Description: \"Introduction to Systems Programming\" },\n    { CourseName: \"CISC220\", Credit: 3, Description: \"Data Structures\" },\n    { CourseName: \"CISC260\", Credit: 3, Description: \"Machine Organization and Assembly Language\" },\n    { CourseName: \"CISC275\", Credit: 3, Description: \"Introduction to Software Engineering\" },\n    { CourseName: \"CISC304\", Credit: 3, Description: \"Logic for Programming\" },\n    { CourseName: \"CISC320\", Credit: 3, Description: \"Introduction to Algorithms\" },\n    { CourseName: \"CISC355\", Credit: 3, Description: \"Computers, Ethics and Society\" },\n    { CourseName: \"CISC361\", Credit: 3, Description: \"Operating Systems\" },\n    { CourseName: \"CISC372\", Credit: 3, Description: \"Parallel Computing\" },\n    { CourseName: \"CISC404\", Credit: 3, Description: \"Logic in Computer Science\" },\n    { CourseName: \"CISC410\", Credit: 3, Description: \"Computational Mathematics I\" },\n    { CourseName: \"CISC437\", Credit: 3, Description: \"Database Systems\" },\n    { CourseName: \"CISC442\", Credit: 3, Description: \"Introduction to Computer Vision\" },\n];\n\nfunction App(): JSX.Element {\n    const [scheduler, setScheduler] = useState<{ [x: string]: CourseList; }>({\n        \"Courses\": {\n            name: \"Courses\",\n            items: list\n        },\n        \"First Year Fall\": {\n            name: \"First Year Fall\",\n            items: []\n        },\n        \"First Year Spring\": {\n            name: \"First Year Spring\",\n            items: []\n        },\n        \"Second Year Fall\": {\n            name: \"Second Year Fall\",\n            items: []\n        },\n        \"Second Year Spring\": {\n            name: \"Second Year Spring\",\n            items: []\n        },\n        \"Third Year Fall\": {\n            name: \"Third Year Fall\",\n            items: []\n        },\n        \"Third Year Spring\": {\n            name: \"Third Year Spring\",\n            items: []\n        },\n        \"Fourth Year Fall\": {\n            name: \"Fourth Year Fall\",\n            items: []\n        },\n        \"Fourth Year Spring\": {\n            name: \"Fourth Year Spring\",\n            items: []\n        }\n    });\n    return (\n        <div className=\"APP\">\n            <header>\n                UD CIS Scheduler\n            </header>\n            <p>\n                Welcome to UD CIS Scheduler make by Yongxu Boyuan Yufan!\n            </p>\n            <p>\n                You can asscess your each year plan or 4 year whole plan through homepage, you can also go to course search to find course information.\n            </p>\n            <Router>\n                <div>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/scheduler\">Scheduler</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/preview\">Preview</Link>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <Routes>\n\n                        <Route path=\"/preview\" element={<Summary scheduler={scheduler} />} />\n\n                        <Route path=\"/scheduler\" element={\n                            <Scheduler scheduler={scheduler} setScheduler={setScheduler} />\n                        }>\n                        </Route>\n                        <Route path=\"/\" element={<Table></Table>} />\n                    </Routes>\n                </div>\n            </Router >\n            {/* <div className=\"btn-group\">\n                <button type=\"button\" className=\"btn btn-primary\">Help</button>\n                <button type=\"button\" className=\"btn btn-primary\">About</button>\n                <button type=\"button\" className=\"btn btn-primary\">Import file</button>\n                <button type=\"button\" className=\"btn btn-primary\">Export file</button>\n            </div> */}\n\n            {/* <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Freshmen\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\"><button>Freshmen Fall</button></Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\"><button>Freshmen Spring</button></Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Sophomore\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\"><button>Sophomore Fall</button></Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\"><button>Sophomore Spring</button></Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Junior\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\"><button>Junior Fall</button></Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\"><button>Junior Spring</button></Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Senior\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\"><button>Senior Fall</button></Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\"><button>Senior Spring</button></Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            <div>\n                <button type=\"button\" className=\"btn btn-primary\">4 Year Plan</button>\n            </div>\n            <div>\n                <button type=\"button\" className=\"btn btn-primary\">Course Search</button>\n            </div> */}\n        </div >\n    );\n}\nexport default App;","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\n\n\n\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n        {/* <Table /> */}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}