{"version":3,"sources":["components/Scheduler.tsx","components/Summary.tsx","logo.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Scheduler","scheduler","setScheduler","console","log","useState","semesterName","setSemesterName","columns","setColumns","useEffect","className","Row","Col","md","Form","Group","Label","Control","type","value","onChange","e","target","placeholder","Button","onClick","copy","name","items","style","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","map","columnId","flexDirection","alignItems","border","background","margin","padding","width","cursor","removeSemester","xmlns","fill","viewBox","d","fillRule","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","item","draggableId","CourseName","draggableProps","dragHandleProps","userSelect","minHeight","backgroundColor","isDragging","color","fontSize","Credit","Description","Summary","list","setList","filter","setFilter","selected","setSelected","f","onSelected","includes","i","push","Container","id","checked","htmlFor","semester","course","reduce","a","b","options","options1","styles1","dropdown","borderRadius","styles","App","src","logo","alt","to","href","path","element","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ead2621c.chunk.js","sourcesContent":["/* eslint-disable no-extra-parens */\nimport React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { CourseList, Course } from \"../App\";\n\n\ninterface SchedulerProp {\n    scheduler: { [x: string]: CourseList; }\n    setScheduler: React.Dispatch<React.SetStateAction<{ [x: string]: CourseList; }>>\n}\n\n\n\nconst Scheduler = ({ scheduler, setScheduler }: SchedulerProp): JSX.Element => {\n\n    // const courseList: CourseList[] = ;\n    console.log(scheduler);\n    const [semesterName, setSemesterName] = useState<string>(\"\");\n    const [columns, setColumns] = useState<{ [x: string]: CourseList; }>(scheduler);\n\n    useEffect(() => {\n        // console.log(columns);\n        setScheduler(columns);\n    }, [columns]);\n\n\n    const onDragEnd = (result: DropResult, columns: { [x: string]: CourseList; }, setColumns: React.Dispatch<React.SetStateAction<{ [x: string]: CourseList; }>>) => {\n        if (!result.destination) return;\n        const { source, destination } = result;\n\n        if (source.droppableId !== destination.droppableId) {\n            const sourceColumn = columns[source.droppableId];\n            const destColumn = columns[destination.droppableId];\n            const sourceItems = [...sourceColumn.items];\n            const destItems = [...destColumn.items];\n            const [removed] = sourceItems.splice(source.index, 1);\n            destItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...sourceColumn,\n                    items: sourceItems\n                },\n                [destination.droppableId]: {\n                    ...destColumn,\n                    items: destItems\n                }\n            });\n        } else {\n            const column = columns[source.droppableId];\n            const copiedItems = [...column.items];\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...column,\n                    items: copiedItems\n                }\n            });\n        }\n    };\n\n\n    const addSemester = () => {\n        console.log(columns);\n        const copy = { ...columns };\n        if (semesterName === \"\" || copy[semesterName])\n            return;\n\n        copy[semesterName] = ({\n            name: semesterName,\n            items: []\n        });\n        setColumns(copy);\n        setSemesterName(\"\");\n        return;\n    };\n\n    const removeSemester = (name: string) => {\n        const copy = { ...columns };\n        copy[\"Courses\"].items = [...copy[\"Courses\"].items, ...copy[name].items];\n        delete copy[name];\n        setColumns(copy);\n    };\n\n\n    return <div className=\"p-3 \">\n        <Row>\n            <Col md=\"3\">\n                <Form.Group className=\"mb-3\" >\n                    <Form.Label>Add Semester</Form.Label>\n                    <Form.Control type=\"text\" className=\"mb-2\" value={semesterName} onChange={(e) => setSemesterName((e.target as HTMLInputElement).value)} placeholder=\"Enter Semester\" />\n                    <Button onClick={addSemester}>Add</Button>\n                </Form.Group>\n            </Col>\n        </Row>\n\n        <div style={{ display: \"flex\", justifyContent: \"left\", height: \"100%\" }}>\n\n            <DragDropContext\n                onDragEnd={result => onDragEnd(result, columns, setColumns)}\n            >\n                {Object.entries(columns).map(([columnId, column]) => {\n                    return (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                alignItems: \"center\",\n                                // color: \"white\",\n                                border: \"2px solid darkgrey\",\n                                background: \"lightgrey\",\n                                // padding: \"5px\",\n                                margin: \"0px 10px\",\n                            }}\n                            key={columnId}\n                        >\n                            <div style={{\n                                padding: \"5px\",\n                                width: \"100%\",\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                            }}> <div className=\"fs-6\">{column.name}</div>\n                                {column.name !== \"Courses\" && <div\n                                    style={{\n                                        padding: \"2px\",\n                                        cursor: \"pointer\",\n                                        // border: \"1px solid darkgrey\",\n                                        // background: \"darkgrey\"\n                                    }}\n                                    onClick={() => removeSemester(column.name)} ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                                        <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n                                    </svg></div>}\n                            </div>\n                            <div style={{ margin: 8 }}>\n                                <Droppable droppableId={columnId} key={columnId}>\n                                    {(provided, snapshot) => {\n                                        return (\n                                            <div\n                                                {...provided.droppableProps}\n                                                ref={provided.innerRef}\n                                                style={{\n                                                    background: snapshot.isDraggingOver\n                                                        ? \"lightblue\"\n                                                        : \"lightgrey\",\n                                                    // padding: 4,\n                                                    width: 150,\n                                                    // height: 500,\n                                                    // overflowY: \"scroll\"\n                                                }}\n                                            >\n                                                {column.items.map((item: Course, index: number) => {\n                                                    return (\n                                                        <Draggable\n                                                            key={item.CourseName}\n                                                            draggableId={item.CourseName}\n                                                            index={index}\n                                                        >\n                                                            {(provided, snapshot) => {\n                                                                return (\n                                                                    <div\n                                                                        ref={provided.innerRef}\n                                                                        {...provided.draggableProps}\n                                                                        {...provided.dragHandleProps}\n                                                                        style={{\n                                                                            userSelect: \"none\",\n                                                                            padding: 16,\n                                                                            margin: \"0 0 8px 0\",\n                                                                            minHeight: \"50px\",\n                                                                            backgroundColor: snapshot.isDragging\n                                                                                ? \"#263B4A\"\n                                                                                : \"#456C86\",\n                                                                            color: \"white\",\n                                                                            ...provided.draggableProps.style\n                                                                        }}\n                                                                    >\n                                                                        <h5 style={{\n                                                                            fontSize: \"12px\"\n                                                                        }}>{item.CourseName}</h5>\n                                                                        <div style={{\n                                                                            fontSize: \"12px\"\n                                                                        }}>Credit: {item.Credit}</div>\n                                                                        <div style={{\n                                                                            fontSize: \"11px\"\n                                                                        }}>{item.Description}</div>\n                                                                    </div>\n                                                                );\n                                                            }}\n                                                        </Draggable>\n                                                    );\n                                                })}\n                                                {provided.placeholder}\n                                            </div>\n                                        );\n                                    }}\n                                </Droppable>\n                            </div>\n                        </div>\n                    );\n                })}\n            </DragDropContext>\n        </div>\n    </div>\n    ;\n};\n\nexport default Scheduler;\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { CourseList, Course } from \"../App\";\ninterface SummaryProp {\n    scheduler: { [x: string]: CourseList; };\n\n}\n\nconst Summary = ({ scheduler }: SummaryProp): JSX.Element => {\n    const [list, setList] = useState<CourseList[]>([]);\n    const [filter, setFilter] = useState<string[]>([]);\n    const [selected, setSelected] = useState<string[]>([]);\n\n    useEffect(() => {\n        setList(Object.entries(scheduler).map((item) => item[1]).filter((item) => item.name !== \"Courses\"));\n        const f = Object.entries(scheduler).map((item) => item[0]).filter((item) => item !== \"Courses\");\n        setFilter(f);\n        setSelected(f);\n    }, []);\n\n    const filteredList = () => {\n        return list.filter(item => selected.includes(item.name));\n\n    };\n\n    const onSelected = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        let copy = [...selected];\n        if (copy.includes(value)) {\n            copy = copy.filter(i => i !== value);\n        } else {\n            copy.push(value);\n        }\n        setSelected(copy);\n    };\n    return <>\n        <Container>\n            <Row>\n                {filter.map((item) => <Col md=\"3\" key={item} ><div className=\"form-check\">\n                    <input className=\"form-check-input\" id={item} value={item} checked={selected.includes(item)} onChange={onSelected} type=\"checkbox\" />\n                    <label className=\"form-check-label\" htmlFor={item} >\n                        {item}\n                    </label>\n                </div></Col>)}\n            </Row>\n\n            <Row>\n\n                {filteredList().map((semester: CourseList) => <Col md=\"6\" key={semester.name}>\n                    {/* <h5>{semester.name}</h5> */}\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th>\n                                    {semester.name}\n                                </th>\n                                <th>\n\n                                </th>\n                                <th>\n\n                                </th>\n\n                            </tr>\n                            <tr>\n                                <th>\n                                    CourseName\n                                </th>\n                                <th>\n                                    Credit\n                                </th>\n                                <th>\n                                    Description\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {semester.items.map((course: Course) => <tr key={course.CourseName}>\n                                <td>\n                                    {course.CourseName}\n                                </td>\n                                <td>\n                                    {course.Credit}\n                                </td>\n                                <td>\n                                    {course.Description}\n                                </td>\n                            </tr>)}\n\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <th>\n                                    Total\n                                </th>\n                                <th>\n                                    {semester.items.map((course: Course) => course.Credit).reduce((a: number, b: number) => a + b, 0)}\n                                </th>\n                                <th>\n                                </th>\n                            </tr>\n                        </tfoot>\n\n                    </table></Col>)}\n            </Row>\n        </Container>\n    </>;\n};\n\nexport default Summary;","export default __webpack_public_path__ + \"static/media/logo.6fe1fdd2.png\";","/* eslint-disable react/jsx-no-undef */\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Table from \"react-bootstrap/Table\";\n// import { Dropdown } from \"react-bootstrap\";\nimport Scheduler from \"./components/Scheduler\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Summary from \"./components/Summary\";\nimport DropdownBox from \"react-dropdown\";\nimport logo from \"./logo.png\";\n\nconst options =[\"Prerequisite for CISC181 and CISC210 is CISC108.\", \"Prerequisite for MATH242 is MATH241.\", \"Prerequisite for CISC220 and CISC260 is CISC210.\", \"Prerequisites for MATH210 is MATH241 and MATH242.\", \"Prerequisite for MATH243 is MATH242.\", \"Prerequisites for CISC275 is CISC181 and CISC220.\", \"Prerequisite for MATH205 is MATH210.\", \"Prerequisite for MATH350 is MATH243.\"];\nconst defaultOption = \"Click Me\";\n\nconst options1 =[\"EGGG101 shoulb be taken in first year.\", \"ENGL110 is required for everyone.\", \"College, University Breadth, and University Requirements.\", \"2 science courses with labs.\",\"Complete CISC courses\"];\nconst defaultOption1 = \"Click Me\";\n\nconst styles1 = {\n    dropdown: {\n        width: \"40%\",\n        //padding: \"0px 0px\",\n        margin: \"10px auto\",\n        background: \"grey\",\n        borderRadius: \"90px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 17,\n        border: \"10px solid black\",\n    },\n} as const;\n\nconst styles = {\n    dropdown: {\n        width: \"40%\",\n        //padding: \"0px 0px\",\n        margin: \"10px auto\",\n        background: \"grey\",\n        borderRadius: \"90px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 17,\n        border: \"10px solid black\",\n    },\n} as const;\n\nexport interface Course {\n    CourseName: string;\n    Credit: number;\n    Description: string;\n}\n\nexport interface CourseList {\n    name: string\n    items: Course[]\n}\nconst list = [\n    { CourseName: \"CISC106\", Credit: 3, Description: \"General Computer Science for Engineers\" },\n    { CourseName: \"CISC108\", Credit: 3, Description: \"Introduction to Computer Science I\" },\n    { CourseName: \"CISC181\", Credit: 3, Description: \"Introduction to Computer Science II\" },\n    { CourseName: \"CISC210\", Credit: 3, Description: \"Introduction to Systems Programming\" },\n    { CourseName: \"CISC220\", Credit: 3, Description: \"Data Structures\" },\n    { CourseName: \"CISC260\", Credit: 3, Description: \"Machine Organization and Assembly Language\" },\n    { CourseName: \"CISC275\", Credit: 3, Description: \"Introduction to Software Engineering\" },\n    { CourseName: \"CISC303\", Credit: 3, Description: \"Automata Theory\" },\n    { CourseName: \"CISC304\", Credit: 3, Description: \"Logic for Programming\" },\n    { CourseName: \"CISC320\", Credit: 3, Description: \"Introduction to Algorithms\" },\n    { CourseName: \"CISC355\", Credit: 3, Description: \"Computers, Ethics and Society\" },\n    { CourseName: \"CISC361\", Credit: 3, Description: \"Operating Systems\" },\n    { CourseName: \"CISC372\", Credit: 3, Description: \"Parallel Computing\" },\n    { CourseName: \"CISC404\", Credit: 3, Description: \"Logic in Computer Science\" },\n    { CourseName: \"CISC410\", Credit: 3, Description: \"Computational Mathematics I\" },\n    { CourseName: \"CISC436\", Credit: 3, Description: \"Computational Biology & Bioinformatics\" },\n    { CourseName: \"CISC437\", Credit: 3, Description: \"Database Systems\" },\n    { CourseName: \"CISC442\", Credit: 3, Description: \"Introduction to Computer Vision\" },\n    { CourseName: \"CISC449\", Credit: 3, Description: \"Topics in Computer Applications: Various Topics\" },\n    { CourseName: \"CISC450\", Credit: 3, Description: \"Computer Networks I\" },\n    { CourseName: \"CISC472\", Credit: 3, Description: \"Web Applications Security\" },\n    { CourseName: \"CISC474\", Credit: 3, Description: \"Advanced Web Technologies\" },\n    { CourseName: \"CISC475\", Credit: 3, Description: \"Advanced Software Engineering\" },\n    { CourseName: \"CISC481\", Credit: 3, Description: \"Artificial Intelligence\" },\n    { CourseName: \"CISC482\", Credit: 3, Description: \"Introduction to Human-Computer Interaction\" },\n    { CourseName: \"CISC483\", Credit: 3, Description: \"Introduction to Data Mining\" },\n    { CourseName: \"CISC484\", Credit: 3, Description: \"Introduction to Machine Learning\" },\n    { CourseName: \"MATH210\", Credit: 3, Description: \"Discrete Mathematics I\"},\n    { CourseName: \"MATH241\", Credit: 4, Description: \"Analytic Geometry and Calculus A\"},\n    { CourseName: \"MATH242\", Credit: 4, Description: \"Analytic Geometry and Calculus B\"},\n    { CourseName: \"MATH243\", Credit: 4, Description: \"Analytic Geometry and Calculus C\"},\n    { CourseName: \"ENGL110\", Credit: 3, Description: \"Seminar in Composition\"},\n    { CourseName: \"MATH205\", Credit: 4, Description: \"Statistical Methods\"},\n    { CourseName: \"MATH350\", Credit: 3, Description: \"Probability Theory and Simulation Methods\"},\n    { CourseName: \"CISC498\", Credit: 3, Description: \"Computer Science Senior Design Project I\"},\n    { CourseName: \"CISC499\", Credit: 3, Description: \"Computer Science Senior Design Project II\"},\n    { CourseName: \"PHYS207\", Credit: 3, Description: \"Fundamentals of Physics I\"},\n    { CourseName: \"PHYS208\", Credit: 3, Description: \"Fundamentals of Physics II\"},\n    { CourseName: \"CHEM103\", Credit: 3, Description: \"General Chemistry\"},\n    { CourseName: \"CHEM104\", Credit: 3, Description: \"General Chemistry \"},\n    { CourseName: \"BISC207\", Credit: 4, Description: \"Introductory Biology I\"},\n    { CourseName: \"BISC208\", Credit: 4, Description: \"Introductory Biology II\"}\n];\n\nfunction App(): JSX.Element {\n    const [scheduler, setScheduler] = useState<{ [x: string]: CourseList; }>({\n        \"Courses\": {\n            name: \"Courses\",\n            items: list\n        },\n        \"First Year Fall\": {\n            name: \"First Year Fall\",\n            items: []\n        },\n        \"First Year Spring\": {\n            name: \"First Year Spring\",\n            items: []\n        },\n        \"Second Year Fall\": {\n            name: \"Second Year Fall\",\n            items: []\n        },\n        \"Second Year Spring\": {\n            name: \"Second Year Spring\",\n            items: []\n        },\n        \"Third Year Fall\": {\n            name: \"Third Year Fall\",\n            items: []\n        },\n        \"Third Year Spring\": {\n            name: \"Third Year Spring\",\n            items: []\n        },\n        \"Fourth Year Fall\": {\n            name: \"Fourth Year Fall\",\n            items: []\n        },\n        \"Fourth Year Spring\": {\n            name: \"Fourth Year Spring\",\n            items: []\n        }\n    });\n    return (\n        <div className=\"APP\">\n            <header>\n                UD CIS Scheduler\n            </header>\n            <img src={logo} alt=\"\" />\n            <p>\n                Welcome to UD CIS Scheduler make by Yongxu Boyuan Yufan!\n            </p>\n            <p>\n                You can asscess your each year plan or 4 year whole plan through homepage, you can also go to course search to find course information. Course prerequisites and degree requirment are shown in the below.\n            </p>\n            <Router>\n                <div>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to=\"/scheduler\">Scheduler</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/preview\">Preview</Link>\n                            </li>\n                            <li>\n                                <a href=\"https://www.cis.udel.edu/academics/undergraduate-programs/bscs/\">Common Plan</a>\n                            </li>\n                            \n                        </ul>\n                    </nav>\n\n                    <Routes>\n\n                        <Route path=\"/preview\" element={<Summary scheduler={scheduler} />} />\n\n                        <Route path=\"/scheduler\" element={\n                            <Scheduler scheduler={scheduler} setScheduler={setScheduler} />\n                        }>\n                        </Route>\n                        <Route path=\"/\" element={<Table></Table>} />\n                        \n                    </Routes>\n                </div>\n            </Router >\n            <div style={styles.dropdown}>\n                <h3>Course Prerequisites</h3>\n                <DropdownBox options={options} value={defaultOption} placeholder=\"Select an option\" />\n            </div>\n            <div style={styles1.dropdown}>\n                <h3>Degree Requirements</h3>\n                <DropdownBox options={options1} value={defaultOption1} placeholder=\"Select an option\" />\n            </div>\n        </div >\n    );\n}\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\n\n\n\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n        {/* <Table /> */}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}